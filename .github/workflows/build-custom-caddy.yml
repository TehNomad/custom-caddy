name: Build Custom Caddy if New Version Available

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Every day

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.caddy.outputs.latest_tag }}
      should_build: ${{ steps.should_build.outputs.should_build }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch latest Caddy release (authenticated)
        id: caddy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          latest=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/caddyserver/caddy/releases/latest | jq -r .tag_name)
          echo "Latest Caddy version: $latest"
          echo "latest_tag=$latest" >> $GITHUB_OUTPUT

      - name: Read last built version (if exists)
        id: last_built
        run: |
          if [ -f LAST_CADDY_RELEASE.txt ]; then
            last=$(cat LAST_CADDY_RELEASE.txt)
            echo "Last built version: $last"
            echo "last_built=$last" >> $GITHUB_OUTPUT
          else
            echo "No previous version found"
            echo "last_built=none" >> $GITHUB_OUTPUT
          fi

      - name: Compare versions
        id: should_build
        run: |
          if [ "${{ steps.caddy.outputs.latest_tag }}" != "${{ steps.last_built.outputs.last_built }}" ]; then
            echo "New version detected!"
            echo "should_build=true" >> $GITHUB_OUTPUT
          else
            echo "No new version."
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed to push version file and create release
    if: needs.check.outputs.should_build == 'true'
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Install xcaddy
        run: go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read plugin list from file
        id: plugins
        run: |
          echo "plugin_args=$(sed 's/^/--with /' CADDY_PLUGINS.txt | xargs)" >> $GITHUB_OUTPUT

      - name: Build custom Caddy
        run: |
          xcaddy build ${{ needs.check.outputs.latest_tag }} ${{ steps.plugins.outputs.plugin_args }}
          mv caddy caddy-custom

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: custom-${{ needs.check.outputs.latest_tag }}
          name: Custom Caddy - ${{ needs.check.outputs.latest_tag }}
          body: |
            xcaddy build ${{ steps.plugins.outputs.plugin_args }}
          files: caddy-custom
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save latest version to file
        run: echo "${{ needs.check.outputs.latest_tag }}" > LAST_CADDY_RELEASE.txt

      - name: Commit updated LAST_CADDY_RELEASE.txt
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add LAST_CADDY_RELEASE.txt
          git commit -m "Update last built Caddy version to ${{ needs.check.outputs.latest_tag }}"
          git push

